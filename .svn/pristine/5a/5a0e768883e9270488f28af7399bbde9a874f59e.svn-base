//
//  PrivateAppointmentView.m
//  Lobby
//
//  Created by CIB-MacMini on 16/10/11.
//  Copyright © 2016年 swy. All rights reserved.
//

#import "PrivateAppointmentView.h"
#import "CustomIndicatorView.h"

@implementation PrivateAppointmentView
{
    UIScrollView *scrollview;
    float temporayVar;
    BOOL ischoiced;
    NSMutableArray *detailArray;
    NSArray *array1;
    NSArray *array2;
}

-(void)awakeFromNib{
    ischoiced = NO;
    self.layer.cornerRadius = 5;
    self.clipsToBounds = YES;
    array1 = [NSArray arrayWithObjects:@"业务类型",@"客户姓名",@"币种",@"金额",@"期望提取日期",@"新旧程度",@"面额",@"手机号",@"预约时间",@"备注",nil];
    array2 = [NSArray arrayWithObjects:@"1",@"2",@"3",@"4",@"5",@"6",@"7",@"8",@"9",@"10", nil];
    detailArray = [[NSMutableArray alloc] initWithArray:array2];
    
}

- (IBAction)statuschange:(id)sender {
    
}

- (IBAction)sendmessage:(id)sender {
    ischoiced = !ischoiced;
    if (ischoiced) {
        self.contentLabel.hidden = NO;
        self.leftbracket.hidden = NO;
        self.rightbracket.hidden = NO;
        self.remak_textview.userInteractionEnabled = YES;
        self.remak_textview.textColor = UIColorFromRGB(0x24344e);
        [self.checkboxBtn setBackgroundImage:[UIImage imageNamed:@"btn_send_click"] forState:UIControlStateNormal];
                
    }else{
        self.contentLabel.hidden = YES;
        self.leftbracket.hidden = YES;
        self.rightbracket.hidden = YES;
        self.remak_textview.userInteractionEnabled = NO;
        self.remak_textview.textColor = UIColorFromRGB(0xa6a7b1);
        [self.checkboxBtn setBackgroundImage:[UIImage imageNamed:@"btn_send_unclick"] forState:UIControlStateNormal];
    }
}

- (void)setPragrames:(NSArray *)pragrames
{
    _pragrames = pragrames;
    
    //访问接口
    [self dateDetail:_pragrames];
}

- (void)dateDetail:(NSArray *)pragram
{
    [[CustomIndicatorView sharedView] showInView:self];
    [[CustomIndicatorView sharedView] startAnimating];
    
    NSMutableDictionary *paramDic = [[NSMutableDictionary alloc] init];
    
    [paramDic setObject:pragram[0] forKey:@"dqdh"];
    [paramDic setObject:pragram[1] forKey:@"jgdh"];
    [paramDic setObject:pragram[2] forKey:@"yybh"];
    
    void(^failure)(NSString *, NSString *) = ^(NSString *responseCode, NSString *responseInfo) {
        [[CustomIndicatorView sharedView] stopAnimating];
        NSString *alertInfo = [NSString stringWithFormat:@"错误%@， 网络连接错误", responseCode];
    };
    
    void(^success)(NSString *, NSString *) = ^(NSString *responseCode, NSString *responseInfo) {
        [[CustomIndicatorView sharedView] stopAnimating];
        if ([responseCode isEqualToString:@"I00"]) {
            NSString *resultCode = [responseInfo valueForKey:@"resultCode"];
            if ([resultCode isEqualToString:@"0"]) {
                id result = [responseInfo valueForKey:@"result"];
                
                //设置期望提取时间
                NSString *dateTime = result[@"qwqxrq"];
                NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
                [formatter setDateFormat:@"yyyy-dd-MM"];
                NSDate *d = [NSDate dateWithTimeIntervalSince1970:[dateTime integerValue]];
                NSString *qwtqtimeStr = [formatter stringFromDate:d];
                [detailArray replaceObjectAtIndex:4 withObject:qwtqtimeStr];
                
                //设置预约时间
                NSString *createTime = result[@"cjsj"];
                NSDateFormatter *dateformatter = [[NSDateFormatter alloc] init];
                [dateformatter setDateFormat:@"yyyy-dd-MM HH:mm"];
                NSDate *date = [NSDate dateWithTimeIntervalSince1970:[createTime integerValue]];
                NSString *createtimeStr = [dateformatter stringFromDate:date];
                [detailArray replaceObjectAtIndex:8 withObject:createtimeStr];
                
                NSDictionary *businessTypeDic = nil;//业务类型
                NSDictionary *moneyTypeDic = nil;//公司性质类型
                NSDictionary *statusTypeDic = nil;//预约状态类型
                
                //从本地获取客户层级
                NSString *homePath = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES)[0];
                NSString *filePath = [homePath stringByAppendingPathComponent:@"keyvalue.plist"];
                NSDictionary *rootDic = [NSDictionary dictionaryWithContentsOfFile:filePath];
                if (rootDic) {
                    NSArray *branches = rootDic[@"Root"];
                    NSMutableDictionary *tempDic1 = [NSMutableDictionary dictionary];
                    NSMutableDictionary *tempDic2 = [NSMutableDictionary dictionary];
                    NSMutableDictionary *tempDic3 = [NSMutableDictionary dictionary];
                    for (NSDictionary *item in branches) {
                        if ([@"OTO_DSYW" isEqualToString:item[@"codeType"]]) {
                            NSString *val = item[@"codeValue"];
                            NSString *key = item[@"codeId"];
                            [tempDic1 addEntriesFromDictionary:@{key:val}];
                        } else if ([@"OTO_YWBZ" isEqualToString:item[@"codeType"]]) {
                            NSString *val = item[@"codeValue"];
                            NSString *key = item[@"codeId"];
                            [tempDic2 addEntriesFromDictionary:@{key:val}];
                        } else if ([@"OTO_BITX" isEqualToString:item[@"codeType"]]) {
                            NSString *val = item[@"codeValue"];
                            NSString *key = item[@"codeId"];
                            [tempDic3 addEntriesFromDictionary:@{key:val}];
                        }
                    }
                    businessTypeDic = tempDic1;
                    moneyTypeDic = tempDic2;
                    statusTypeDic = tempDic3;
                }
                // 设置业务类型
                NSString *busTypeKey = result[@"ywzl"];
                NSString *busVal = businessTypeDic[busTypeKey];
                [detailArray replaceObjectAtIndex:0 withObject:busVal];
                
                // 设置姓名
                NSString *nameStr = result[@"khmc"];
                [detailArray replaceObjectAtIndex:1 withObject:nameStr];
                
                // 设置币种
                NSString *moneyTypeKey = result[@"bz"];
                NSString *bzValue = moneyTypeDic[moneyTypeKey];
                [detailArray replaceObjectAtIndex:2 withObject:bzValue];
                
                // 设置金额
                NSString *numberOfMoney = result[@"qxje"];
                [detailArray replaceObjectAtIndex:3 withObject:numberOfMoney];
                
                // 设置新旧程度
                NSString *statusOfMoney = result[@"xcbz"];
                NSString *statusOfStr = [[NSString alloc] init];
                
                if ([statusOfMoney isEqualToString:@"0"]) {
                    statusOfStr = @"普通";
                }else if([statusOfMoney isEqualToString:@"1"]){
                    statusOfStr = @"新钞";
                }else{
                    statusOfStr = @"";
                }
                [detailArray replaceObjectAtIndex:5 withObject:statusOfStr];
                
                // 设置面额
                NSString *byNumber = result[@"bycpsl"];
                if (![byNumber isEqualToString:@""]) {
                    byNumber = [NSString stringWithFormat:@"100元/%d张  ",[byNumber intValue]];
                }
                NSString *wsyNumber = result[@"wsycpsl"];
                if (![wsyNumber isEqualToString:@""]) {
                    wsyNumber = [NSString stringWithFormat:@"50元/%d张  ",[wsyNumber intValue]];
                }
                NSString *ersyNumber = result[@"esycpsl"];
                if (![ersyNumber isEqualToString:@""]) {
                    ersyNumber = [NSString stringWithFormat:@"20元/%d张  ",[ersyNumber intValue]];
                }
                NSString *syNumber = result[@"sycpsl"];
                if (![syNumber isEqualToString:@""]) {
                    syNumber = [NSString stringWithFormat:@"10元/%d张  ",[syNumber intValue]];
                }
                NSString *wyNumber = result[@"wycpsl"];
                if (![wyNumber isEqualToString:@""]) {
                    wyNumber = [NSString stringWithFormat:@"5元/%d张  ",[wyNumber intValue]];
                }
                NSString *yyNumber = result[@"yycpsl"];
                if (![yyNumber isEqualToString:@""]) {
                    yyNumber = [NSString stringWithFormat:@"1元/%d张  ",[yyNumber intValue]];
                }
                NSString *wjNumber = result[@"wjcpsl"];
                if (![wjNumber isEqualToString:@""]) {
                    wjNumber = [NSString stringWithFormat:@"5角/%d张  ",[wjNumber intValue]];
                }
                NSString *totalNumber = [[[[[[byNumber stringByAppendingString:wsyNumber] stringByAppendingString:ersyNumber] stringByAppendingString:syNumber] stringByAppendingString:wyNumber] stringByAppendingString:yyNumber] stringByAppendingString:wjNumber];
                [detailArray replaceObjectAtIndex:6 withObject:totalNumber];
                
                // 设置手机号
                NSString *phoneNumber = result[@"yysj"];
                [detailArray replaceObjectAtIndex:7 withObject:phoneNumber];
                
                // 设置备注
                NSString *remarkStr = result[@"khly"];
                [detailArray replaceObjectAtIndex:9 withObject:remarkStr];
                
                scrollview = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 50, 450, 365)];
                scrollview.scrollEnabled = YES;
                scrollview.showsHorizontalScrollIndicator = NO;
                scrollview.showsVerticalScrollIndicator = YES;
                scrollview.bounces = NO;
                
                for (int i=0; i<10; i++) {
                    UILabel *label1 = [[UILabel alloc] init];
                    label1.text = array1[i];
                    label1.font = [UIFont systemFontOfSize:14];
                    label1.textAlignment = NSTextAlignmentRight;
                    label1.textColor = UIColorFromRGB(0x5a5a5a);
                    UILabel *label2 = [[UILabel alloc] init];
                    label2.text = detailArray[i];
                    label2.numberOfLines = 0;
                    label2.font = [UIFont systemFontOfSize:14];
                    label2.textAlignment = NSTextAlignmentLeft;
                    label2.textColor = UIColorFromRGB(0x24344e);
                    CGSize label2size = {0,0};
                    label2size = [detailArray[i] boundingRectWithSize:CGSizeMake(237, MAXFLOAT) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:14]} context:nil].size;
                    if (i == 0) {
                        label1.frame = CGRectMake(65, 15, 120, 20);
                        label2.frame = CGRectMake(215, 15, 237, label2size.height);
                        temporayVar = label2.frame.size.height;
                        
                    }else{
                        label1.frame = CGRectMake(65, 15 + 20 * i + temporayVar, 120, 20);
                        label2.frame = CGRectMake(215, label1.frame.origin.y, 237, label2size.height);
                        temporayVar = label2.frame.size.height + temporayVar;
                    }
                    scrollview.contentSize = CGSizeMake(450, label2.frame.origin.y + label2size.height);
                    [scrollview addSubview:label1];
                    [scrollview addSubview:label2];
                }
                [self addSubview:scrollview];
            }
        }
    };
    
    [InvokeManager invokeApi:@"otodsxx" withMethod:@"POST" andParameter:paramDic onSuccess:success onFailure:failure];
}

- (IBAction)sure:(id)sender {
    
    [self.superview removeFromSuperview];
}

- (IBAction)cancel:(id)sender {
    [self.superview removeFromSuperview];
}
@end
