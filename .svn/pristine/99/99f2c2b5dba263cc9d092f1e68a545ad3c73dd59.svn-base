//
//  PrivateAppointmentView.m
//  Lobby
//
//  Created by CIB-MacMini on 16/10/11.
//  Copyright © 2016年 swy. All rights reserved.
//

#import "PrivateAppointmentView.h"
#import "CustomIndicatorView.h"

@implementation PrivateAppointmentView
{
    UIScrollView *scrollview;
    float temporayVar;
    BOOL ischoiced;
    NSMutableArray *detailArray;
}

-(void)awakeFromNib{
    ischoiced = NO;
    self.layer.cornerRadius = 5;
    self.clipsToBounds = YES;
    detailArray = [[NSMutableArray alloc] init];
    NSArray *array1 = [NSArray arrayWithObjects:@"业务类型",@"客户姓名",@"币种",@"金额",@"期望提取日期",@"新旧程度",@"面额",@"手机号",@"预约时间",@"备注",nil];
    NSArray *array2 = [NSArray arrayWithObjects:@"已施工爱死啊公司阿萨德费大幅度发地方的冯绍峰的地方地方的发多岁的发是地方收到发",@"2",@"3",@"手势发酸辣粉是否死灵法师发事老地方酸辣粉酸辣粉收代理费失联飞机上肯定是的浪费说服力酸辣粉数量失联飞机事老地方经典款if是滴数量是否实施的浪费数量地方酸辣粉数量",@"5",@"6",@"7",@"8",@"9",@"沙拉酱分公司发是方式发是否是发到苏菲的世界反倒是两个是是地方叫师傅事老地方死灵法师发来是否收到是浪费酸辣粉酸辣粉是否是发是方式水力发电 ", nil];
    
    scrollview = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 50, 450, 365)];
    scrollview.scrollEnabled = YES;
    scrollview.showsHorizontalScrollIndicator = NO;
    scrollview.showsVerticalScrollIndicator = YES;
    scrollview.bounces = NO;
   
    for (int i=0; i<10; i++) {
        UILabel *label1 = [[UILabel alloc] init];
        label1.text = array1[i];
        label1.font = [UIFont systemFontOfSize:14];
        label1.textAlignment = NSTextAlignmentRight;
        label1.textColor = UIColorFromRGB(0x5a5a5a);
        UILabel *label2 = [[UILabel alloc] init];
        label2.text = array2[i];
        label2.numberOfLines = 0;
        label2.font = [UIFont systemFontOfSize:14];
        label2.textAlignment = NSTextAlignmentLeft;
        label2.textColor = UIColorFromRGB(0x24344e);
        CGSize label2size = {0,0};
        label2size = [array2[i] boundingRectWithSize:CGSizeMake(237, MAXFLOAT) options:NSStringDrawingUsesLineFragmentOrigin attributes:@{NSFontAttributeName:[UIFont systemFontOfSize:14]} context:nil].size;
        if (i == 0) {
            label1.frame = CGRectMake(65, 15, 120, 20);
            label2.frame = CGRectMake(215, 15, 237, label2size.height);
            temporayVar = label2.frame.size.height;
            
        }else{
            label1.frame = CGRectMake(65, 15 + 35 * i + temporayVar, 120, 20);
            label2.frame = CGRectMake(215, label1.frame.origin.y, 237, label2size.height);
            temporayVar = label2.frame.size.height + temporayVar;
        }
        scrollview.contentSize = CGSizeMake(450, label2.frame.origin.y + label2size.height);
        [scrollview addSubview:label1];
        [scrollview addSubview:label2];
    }
    [self addSubview:scrollview];
    
}



- (IBAction)statuschange:(id)sender {
    
}

- (IBAction)sendmessage:(id)sender {
    ischoiced = !ischoiced;
    if (ischoiced) {
        self.contentLabel.hidden = NO;
        self.leftbracket.hidden = NO;
        self.rightbracket.hidden = NO;
        self.remak_textview.userInteractionEnabled = YES;
        self.remak_textview.textColor = UIColorFromRGB(0x24344e);
        [self.checkboxBtn setBackgroundImage:[UIImage imageNamed:@"btn_send_click"] forState:UIControlStateNormal];
        
        
    }else{
        self.contentLabel.hidden = YES;
        self.leftbracket.hidden = YES;
        self.rightbracket.hidden = YES;
        self.remak_textview.userInteractionEnabled = NO;
        self.remak_textview.textColor = UIColorFromRGB(0xa6a7b1);
        [self.checkboxBtn setBackgroundImage:[UIImage imageNamed:@"btn_send_unclick"] forState:UIControlStateNormal];
    }
}

- (void)setPragrames:(NSArray *)pragrames
{
    _pragrames = pragrames;
    
    //访问接口
    [self dateDetail:_pragrames];
}

- (void)dateDetail:(NSArray *)pragram
{
    [[CustomIndicatorView sharedView] showInView:self];
    [[CustomIndicatorView sharedView] startAnimating];
    
    NSMutableDictionary *paramDic = [[NSMutableDictionary alloc] init];
    
    [paramDic setObject:pragram[0] forKey:@"dqdh"];
    [paramDic setObject:pragram[1] forKey:@"jgdh"];
    [paramDic setObject:pragram[2] forKey:@"yybh"];
    
    void(^failure)(NSString *, NSString *) = ^(NSString *responseCode, NSString *responseInfo) {
        [[CustomIndicatorView sharedView] stopAnimating];
        NSString *alertInfo = [NSString stringWithFormat:@"错误%@， 网络连接错误", responseCode];
    };
    
    void(^success)(NSString *, NSString *) = ^(NSString *responseCode, NSString *responseInfo) {
        [[CustomIndicatorView sharedView] stopAnimating];
        if ([responseCode isEqualToString:@"I00"]) {
            NSString *resultCode = [responseInfo valueForKey:@"resultCode"];
            if ([resultCode isEqualToString:@"0"]) {
                id result = [responseInfo valueForKey:@"result"];
                
                //设置期望提取时间
                NSString *dateTime = result[@"qwqxrq"];
                NSDateFormatter *formatter = [[NSDateFormatter alloc] init];
                [formatter setDateFormat:@"yyyy-dd-MM"];
                NSDate *d = [NSDate dateWithTimeIntervalSince1970:[dateTime integerValue]];
                NSString *qwtqtimeStr = [formatter stringFromDate:d];
                
                //设置预约时间
                NSString *createTime = result[@"cjsj"];
                NSDateFormatter *dateformatter = [[NSDateFormatter alloc] init];
                [dateformatter setDateFormat:@"yyyy-dd-MM HH:mm"];
                NSDate *date = [NSDate dateWithTimeIntervalSince1970:[createTime integerValue]];
                NSString *createtimeStr = [dateformatter stringFromDate:date];
                
                NSDictionary *businessTypeDic = nil;//业务类型
                NSDictionary *moneyTypeDic = nil;//公司性质类型
                NSDictionary *statusTypeDic = nil;//预约状态类型
                
                //从本地获取客户层级
                NSString *homePath = NSSearchPathForDirectoriesInDomains(NSDocumentDirectory, NSUserDomainMask, YES)[0];
                NSString *filePath = [homePath stringByAppendingPathComponent:@"keyvalue.plist"];
                NSDictionary *rootDic = [NSDictionary dictionaryWithContentsOfFile:filePath];
                if (rootDic) {
                    NSArray *branches = rootDic[@"Root"];
                    NSMutableDictionary *tempDic1 = [NSMutableDictionary dictionary];
                    NSMutableDictionary *tempDic2 = [NSMutableDictionary dictionary];
                    NSMutableDictionary *tempDic3 = [NSMutableDictionary dictionary];
                    for (NSDictionary *item in branches) {
                        if ([@"OTO_DSYW" isEqualToString:item[@"codeType"]]) {
                            NSString *val = item[@"codeValue"];
                            NSString *key = item[@"codeId"];
                            [tempDic1 addEntriesFromDictionary:@{key:val}];
                        } else if ([@"OTO_YWBZ" isEqualToString:item[@"codeType"]]) {
                            NSString *val = item[@"codeValue"];
                            NSString *key = item[@"codeId"];
                            [tempDic2 addEntriesFromDictionary:@{key:val}];
                        } else if ([@"OTO_BITX" isEqualToString:item[@"codeType"]]) {
                            NSString *val = item[@"codeValue"];
                            NSString *key = item[@"codeId"];
                            [tempDic3 addEntriesFromDictionary:@{key:val}];
                        }
                    }
                    businessTypeDic = tempDic1;
                    moneyTypeDic = tempDic2;
                    statusTypeDic = tempDic3;
                }
                // 设置业务类型
                NSString *busTypeKey = result[@"ywzl"];
                NSString *busVal = businessTypeDic[busTypeKey];
                [detailArray insertObject:busVal atIndex:0];
                
                // 设置姓名
                NSString *nameStr = result[@"khmc"];
                [detailArray insertObject:nameStr atIndex:1];
                
                // 设置币种
                NSString *moneyTypeKey = result[@"bz"];
                NSString *bzValue = moneyTypeDic[moneyTypeKey];
                
            }
        }
    };
    
    [InvokeManager invokeApi:@"otodsxx" withMethod:@"POST" andParameter:paramDic onSuccess:success onFailure:failure];
}

- (IBAction)sure:(id)sender {
    [self.superview removeFromSuperview];
}

- (IBAction)cancel:(id)sender {
    [self.superview removeFromSuperview];
}
@end
